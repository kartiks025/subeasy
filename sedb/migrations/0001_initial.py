# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-04 19:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=20)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='AssignIp',
            fields=[
                ('ai_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_ip', models.CharField(max_length=60)),
                ('end_ip', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'assign_ip',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('assignment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assignment_no', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('publish_time', models.DateTimeField()),
                ('visibility', models.BooleanField()),
                ('helper_file_name', models.CharField(blank=True, max_length=50, null=True)),
                ('helper_file', models.BinaryField(blank=True, null=True)),
                ('crib_deadline', models.DateTimeField()),
                ('num_problems', models.IntegerField()),
            ],
            options={
                'db_table': 'assignment',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Crib',
            fields=[
                ('crib_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('resolved', models.BooleanField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'crib',
            },
        ),
        migrations.CreateModel(
            name='Deadline',
            fields=[
                ('deadline_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('soft_deadline', models.DateTimeField()),
                ('hard_deadline', models.DateTimeField()),
                ('freezing_deadline', models.DateTimeField()),
            ],
            options={
                'db_table': 'deadline',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('problem_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('problem_no', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('helper_file_name', models.CharField(blank=True, max_length=50, null=True)),
                ('helper_file', models.BinaryField(blank=True, null=True)),
                ('solution_filename', models.CharField(blank=True, max_length=50, null=True)),
                ('solution_file', models.BinaryField(blank=True, null=True)),
                ('compile_cmd', models.TextField(blank=True, null=True)),
                ('sol_visibility', models.BooleanField()),
                ('num_testcases', models.IntegerField()),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Assignment')),
            ],
            options={
                'db_table': 'problem',
            },
        ),
        migrations.CreateModel(
            name='ResourceLimit',
            fields=[
                ('resource_limit_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cpu_time', models.IntegerField()),
                ('clock_time', models.IntegerField()),
                ('memory_limit', models.IntegerField()),
                ('stack_limit', models.IntegerField()),
                ('open_files', models.IntegerField()),
                ('max_filesize', models.IntegerField()),
            ],
            options={
                'db_table': 'resource_limit',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('sec_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sec_name', models.CharField(max_length=20)),
                ('semester', models.CharField(max_length=10)),
                ('year', models.IntegerField()),
                ('num_assignments', models.IntegerField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Course')),
            ],
            options={
                'db_table': 'section',
            },
        ),
        migrations.CreateModel(
            name='SecUser',
            fields=[
                ('secuser_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=10)),
                ('sec', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Section')),
            ],
            options={
                'db_table': 'sec_user',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('sub_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sub_no', models.IntegerField()),
                ('marks_auto', models.IntegerField()),
                ('marks_inst', models.IntegerField()),
                ('sub_file_name', models.CharField(max_length=50)),
                ('sub_file', models.BinaryField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Problem')),
            ],
            options={
                'db_table': 'submission',
            },
        ),
        migrations.CreateModel(
            name='Testcase',
            fields=[
                ('tc_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('testcase_no', models.IntegerField()),
                ('infile_name', models.CharField(max_length=50)),
                ('infile', models.BinaryField()),
                ('outfile_name', models.CharField(max_length=50)),
                ('outfile', models.BinaryField()),
                ('marks', models.IntegerField()),
                ('visibility', models.BooleanField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Problem')),
            ],
            options={
                'db_table': 'testcase',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserSubmissions',
            fields=[
                ('usub_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('num_submissions', models.IntegerField()),
                ('final_submission_no', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.User')),
            ],
            options={
                'db_table': 'user_submissions',
            },
        ),
        migrations.AddField(
            model_name='submission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.User'),
        ),
        migrations.AddField(
            model_name='secuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.User'),
        ),
        migrations.AddField(
            model_name='problem',
            name='resource_limit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.ResourceLimit'),
        ),
        migrations.AddField(
            model_name='crib',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Problem'),
        ),
        migrations.AddField(
            model_name='crib',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='crib',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Crib'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.User'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='deadline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Deadline'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='sec',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Section'),
        ),
        migrations.AddField(
            model_name='assignip',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sedb.Assignment'),
        ),
        migrations.AlterUniqueTogether(
            name='usersubmissions',
            unique_together=set([('user', 'problem')]),
        ),
        migrations.AlterUniqueTogether(
            name='testcase',
            unique_together=set([('testcase_no', 'problem')]),
        ),
        migrations.AlterUniqueTogether(
            name='submission',
            unique_together=set([('sub_no', 'problem', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='secuser',
            unique_together=set([('user', 'sec')]),
        ),
        migrations.AlterUniqueTogether(
            name='crib',
            unique_together=set([('user', 'problem')]),
        ),
        migrations.AlterUniqueTogether(
            name='assignip',
            unique_together=set([('start_ip', 'end_ip', 'assignment')]),
        ),
    ]
